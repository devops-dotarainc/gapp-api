## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/wingbands
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must not be greater than 255 characters.'
        required: false
        example: wnzeeftaljfoezyxvga
        type: string
        enumValues:
          - id
          - created_at
          - stag_registry
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dmzzvtg
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      season:
        name: season
        description: ''
        required: false
        example: '1'
        type: string
        enumValues:
          - '1'
          - '2'
          - '3'
          - '4'
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bwrxrgsplfqew
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stag_registry:
        name: stag_registry
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vaepo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      breeder_name:
        name: breeder_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: wsgp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      wingband_number:
        name: wingband_number
        description: 'Must not be greater than 255 characters.'
        required: false
        example: oez
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      chapter:
        name: chapter
        description: 'Must not be greater than 255 characters.'
        required: false
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      updated_by:
        name: updated_by
        description: ''
        required: false
        example: '1'
        type: string
        enumValues:
          - '1'
          - '2'
        exampleWasSpecified: false
        nullable: false
        custom: []
      wingband_year:
        name: wingband_year
        description: 'Must be 4 digits. Must be at least 1900. Must not be greater than 2026.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      limit: 14
      sort: wnzeeftaljfoezyxvga
      order: dmzzvtg
      season: '1'
      search: bwrxrgsplfqew
      stag_registry: vaepo
      breeder_name: wsgp
      wingband_number: oez
      chapter: k
      updated_by: '1'
      wingband_year: 14
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success,
           "message": "Wingbands Retrieved Successfully",
           "data": []
          }
        headers: []
        description: success
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "No wingbands found."
          }
        headers: []
        description: 'no wingbands found'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/wingband/import-wingband
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      excel_file:
        name: excel_file
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters: []
    fileParameters:
      excel_file: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/wingband/store-wingband
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      wingband_data:
        name: wingband_data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      wingband_data: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/wingband/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: voluptas
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      stag_registry:
        name: stag_registry
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hdq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      breeder_name:
        name: breeder_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fhjuyepq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      farm_name:
        name: farm_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: miemwkrfgnjpktnzmpqudpkbo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      farm_address:
        name: farm_address
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ffkbte
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      province:
        name: province
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pypwzbhishtdtromixjufop
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      wingband_number:
        name: wingband_number
        description: 'Must be at least 1.'
        required: false
        example: 40
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      feather_color:
        name: feather_color
        description: 'Must not be greater than 255 characters.'
        required: false
        example: tgscczwe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      leg_color:
        name: leg_color
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ldalbcupfgx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      comb_shape:
        name: comb_shape
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pzwxvlny
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      nose_markings:
        name: nose_markings
        description: 'Must not be greater than 255 characters.'
        required: false
        example: lmnfpevotncvmdkprkxnkwxgw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      feet_markings:
        name: feet_markings
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nyfq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: 'Must be at least 1.'
        required: false
        example: 22
        type: integer
        enumValues:
          - '1'
          - '2'
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      stag_registry: hdq
      breeder_name: fhjuyepq
      farm_name: miemwkrfgnjpktnzmpqudpkbo
      farm_address: ffkbte
      province: pypwzbhishtdtromixjufop
      wingband_number: 40
      feather_color: tgscczwe
      leg_color: ldalbcupfgx
      comb_shape: pzwxvlny
      nose_markings: lmnfpevotncvmdkprkxnkwxgw
      feet_markings: nyfq
      status: 22
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/wingband/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: autem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/season/count
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be 4 digits.'
        required: true
        example: '6228'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: '6228'
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/summary/breeders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must not be greater than 255 characters.'
        required: false
        example: zwv
        type: string
        enumValues:
          - id
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'Must not be greater than 255 characters.'
        required: false
        example: wbmtmgdmkyyjchdm
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ufmpcugtskzlaclqwdqwrkku
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      limit: 5
      sort: zwv
      order: wbmtmgdmkyyjchdm
      search: ufmpcugtskzlaclqwdqwrkku
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/summary/chapters
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must not be greater than 255 characters.'
        required: false
        example: rrhcctppefxhjjrdgtwxss
        type: string
        enumValues:
          - id
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mnsmumpmyveaijgpmokxpzr
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: qsvn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      limit: 19
      sort: rrhcctppefxhjjrdgtwxss
      order: mnsmumpmyveaijgpmokxpzr
      search: qsvn
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/summary/farms
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must not be greater than 255 characters.'
        required: false
        example: r
        type: string
        enumValues:
          - id
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'Must not be greater than 255 characters.'
        required: false
        example: niwflvbthugesfjo
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: iyopqssjkurkwkzbens
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      year:
        name: year
        description: 'Must be 4 digits. Must be at least 1900. Must not be greater than 2026.'
        required: false
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      limit: 25
      sort: r
      order: niwflvbthugesfjo
      search: iyopqssjkurkwkzbens
      year: 7
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/summary/stags
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      limit:
        name: limit
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Must not be greater than 255 characters.'
        required: false
        example: gtwoslxrkgot
        type: string
        enumValues:
          - id
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dfthweornlzgipbominvhng
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mmbkrcsngc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      limit: 4
      sort: gtwoslxrkgot
      order: dfthweornlzgipbominvhng
      search: mmbkrcsngc
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/summary/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/stag/export-stag-summary
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      chapter:
        name: chapter
        description: ''
        required: false
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      chapter: sit
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: ''
        required: true
        example: esse
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '}D+9})<MJ%&w!7|1;frd'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      username: esse
      password: '}D+9})<MJ%&w!7|1;frd'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: api/auth/change-password
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'Must be at least 6 characters. Must not be greater than 32 characters.'
        required: true
        example: 'd}!9[S<a:8o-6lA'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      new_password:
        name: new_password
        description: 'Must be at least 6 characters. Must not be greater than 32 characters.'
        required: true
        example: cgoavhiymcotaecehrueirfs
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      password: 'd}!9[S<a:8o-6lA'
      new_password: cgoavhiymcotaecehrueirfs
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: api/auth/logout
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/auth/profile
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: ''
        required: false
        example: cumque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 72
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ideikcpq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      username: cumque
      page: 72
      limit: 14
      sort: itaque
      order: desc
      search: ideikcpq
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Must not be greater than 255 characters.'
        required: true
        example: azbluqrkunjlarw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: true
        example: (VCgY=73xg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: aoxt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: npexxaoygu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: clifford.kris@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contact_number:
        name: contact_number
        description: 'Must be at least 11 characters. Must not be greater than 11 characters.'
        required: false
        example: qfje
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      username: azbluqrkunjlarw
      password: (VCgY=73xg
      role: 9
      first_name: aoxt
      last_name: npexxaoygu
      email: clifford.kris@example.com
      contact_number: qfje
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: maiores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/user/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: fugiat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: fugiat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fycacxvnapteoxkfxamf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters.'
        required: false
        example: '=ooVPrl/'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: hvzxysj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: wdjfzsdf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: idella45@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contact_number:
        name: contact_number
        description: 'Must be at least 11 characters. Must not be greater than 11 characters.'
        required: false
        example: prkpp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      username: fycacxvnapteoxkfxamf
      password: '=ooVPrl/'
      role: 9
      first_name: hvzxysj
      last_name: wdjfzsdf
      email: idella45@example.net
      contact_number: prkpp
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: 'api/user/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: quos
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: quos
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/affiliates
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be at least 4 characters. Must not be greater than 4 characters.'
        required: false
        example: r
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contact_number:
        name: contact_number
        description: 'Must be at least 11 characters. Must not be greater than 11 characters.'
        required: false
        example: cdvzbozvsh
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: autem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ostisvwwz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: r
      contact_number: cdvzbozvsh
      page: 19
      limit: 18
      sort: autem
      order: desc
      search: ostisvwwz
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/affiliate
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: ''
        required: false
        example: voluptas
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contact_number:
        name: contact_number
        description: 'Must be at least 11 characters. Must not be greater than 11 characters.'
        required: false
        example: wyafcjyu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      island_group:
        name: island_group
        description: ''
        required: false
        example: '2'
        type: integer
        enumValues:
          - '1'
          - '2'
          - '3'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      location: voluptas
      name: iste
      contact_number: wyafcjyu
      island_group: '2'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/affiliate/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the affiliate.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/affiliate/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      location:
        name: location
        description: ''
        required: false
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: ''
        required: true
        example: debitis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      contact_number:
        name: contact_number
        description: 'Must be at least 11 characters. Must not be greater than 11 characters.'
        required: false
        example: pihfhhvffl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      island_group:
        name: island_group
        description: ''
        required: false
        example: '3'
        type: integer
        enumValues:
          - '1'
          - '2'
          - '3'
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      location: quo
      name: debitis
      contact_number: pihfhhvffl
      island_group: '3'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: 'api/affiliate/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: possimus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/hofs
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be at least 4 characters. Must not be greater than 4 characters.'
        required: false
        example: i
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 76
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: desc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: pyukmntrbyqnfvzrcbsraep
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: i
      page: 76
      limit: 10
      sort: quo
      order: desc
      search: pyukmntrbyqnfvzrcbsraep
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/hof
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be at least 4 characters. Must not be greater than 4 characters.'
        required: false
        example: q
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      event_date:
        name: event_date
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '2025-02-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: q
      event_date: '2025-02-01'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/hof/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the hof.'
        required: true
        example: explicabo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: explicabo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/hof/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: quisquam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be at least 4 characters. Must not be greater than 4 characters.'
        required: false
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      event_date:
        name: event_date
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '2025-02-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: ex
      event_date: '2025-02-01'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: 'api/hof/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: quaerat
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: quaerat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/bindings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be at least 4 characters. Must not be greater than 4 characters.'
        required: false
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ixfizxcdbnvevvnlvncrtlbje
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: a
      page: 11
      limit: 25
      sort: aut
      order: asc
      search: ixfizxcdbnvevvnlvncrtlbje
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/binding
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be at least 4 characters. Must not be greater than 4 characters.'
        required: false
        example: td
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      event_date:
        name: event_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-02-01T16:48:19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: td
      event_date: '2025-02-01T16:48:19'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/binding/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the binding.'
        required: true
        example: sunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: sunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/binding/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: necessitatibus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      year:
        name: year
        description: 'Must be at least 4 characters. Must not be greater than 4 characters.'
        required: false
        example: yi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 10240 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      event_date:
        name: event_date
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '2025-02-01'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      year: yi
      event_date: '2025-02-01'
    fileParameters:
      image: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: 'api/binding/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: dolorum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dolorum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/settings
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      key:
        name: key
        description: ''
        required: false
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      value:
        name: value
        description: ''
        required: false
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 59
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: ''
        required: false
        example: illo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      order:
        name: order
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
      search:
        name: search
        description: 'Must not be greater than 255 characters.'
        required: false
        example: wdrpytfjddbefxqbtbqcapdj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      key: sit
      name: voluptatem
      value: sed
      page: 59
      limit: 8
      sort: illo
      order: asc
      search: wdrpytfjddbefxqbtbqcapdj
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/setting
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      key:
        name: key
        description: ''
        required: false
        example: aspernatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: velit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      value:
        name: value
        description: ''
        required: false
        example: porro
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      key: aspernatur
      name: velit
      value: porro
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/setting/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the setting.'
        required: true
        example: inventore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: inventore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/setting/update/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: sed
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: sed
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      key:
        name: key
        description: ''
        required: false
        example: natus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: aperiam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      value:
        name: value
        description: ''
        required: false
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      key: natus
      name: aperiam
      value: non
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      0: GET
      2: POST
      3: PUT
      4: PATCH
      5: DELETE
      6: OPTIONS
    uri: 'api/setting/delete/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'Content-Type, Authorization'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
